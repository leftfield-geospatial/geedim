# This workflow will install Python dependencies, run tests and lint with a variety of Python versions

name: Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
  schedule:
    - cron: '0 2 * * 1'  # run weekly

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: ['3.11', '3.13']
        os: [ macos-latest, ubuntu-latest, windows-latest ]

    steps:
    - name: Check out repository
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: 'pip'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest pytest-xdist pytest-cov
        python -m pip install earthengine-api click rasterio tqdm tabulate fsspec aiohttp xarray

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      timeout-minutes: 10
      env:
        EE_SERVICE_ACC_PRIVATE_KEY: ${{ secrets.EE_SERVICE_ACC_PRIVATE_KEY }}
      run: |
        python -m pytest -n auto --durations=10 --cov=geedim --cov-report=term-missing --cov-report=xml:coverage.xml ./tests

    - name: Upload coverage
      uses: codecov/codecov-action@v4
      with:
        fail_ci_if_error: true
        files: ./coverage.xml
        token: ${{ secrets.CODECOV_TOKEN }}
        verbose: true
